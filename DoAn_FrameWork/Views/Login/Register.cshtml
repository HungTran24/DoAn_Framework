@model Customer;
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="UTF-8">
    <title> Register </title>
    <link rel="stylesheet" href="style.css">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins',sans-serif;
}
body{
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10px;
  background: linear-gradient(135deg, #24c6dc, #514a9d);
}
.container{
  max-width: 485px;
  width: 100%;
  background-color: #fff;
  padding: 25px 30px;
  border-radius: 5px;
  box-shadow: 0 5px 10px rgba(0,0,0,0.15);
}
.container .title{
  font-size: 25px;
  font-weight: 500;
  position: relative;
}
.container .title::before{
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  height: 3px;
  width: 30px;
  border-radius: 5px;
  background: linear-gradient(135deg, #71b7e6, #9b59b6);
}
.content form .user-details{
  max-height: 420px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin: 20px 0 12px 0;
}
form .user-details .input-box{
  margin-bottom: 15px;
  width: calc(100% / 2 - 20px);
}
form .input-box span.details{
  display: block;
  font-weight: 500;
  margin-bottom: 5px;
}
.user-details .input-box input{
  height: 45px;
  width: 81%;
  outline: none;
  font-size: 16px;
  border-radius: 5px;
  padding-left: 15px;
  border: 1px solid #ccc;
  border-bottom-width: 2px;
  transition: all 0.3s ease;
}
.user-details .input-box input:focus,
.user-details .input-box input:valid{
  border-color: #9b59b6;
}
 form .gender-details .gender-title{
  font-size: 20px;
  font-weight: 500;
 }
 form .category{
   display: flex;
   width: 80%;
   margin: 14px 0 ;
   /* justify-content: space-between; */
 }
 form .category label{
   display: flex;
   align-items: center;
   cursor: pointer;
 }
 form .category label .dot{
  height: 18px;
  width: 18px;
  border-radius: 50%;
  margin-right: 10px;
  background: #d9d9d9;
  border: 5px solid transparent;
  transition: all 0.3s ease;
}
 #dot-1:checked ~ .category label .one,
 #dot-2:checked ~ .category label .two{
   background: #9b59b6;
   border-color: #d9d9d9;
 }
 form input[type="radio"]{
   display: none;
 }
 form .button{
   height: 45px;
   margin: 35px 0
 }
 form .button input{
   height: 100%;
   width: 100%;
   border-radius: 5px;
   border: none;
   color: #fff;
   font-size: 18px;
   font-weight: 500;
   letter-spacing: 1px;
   cursor: pointer;
   transition: all 0.3s ease;
   background:  linear-gradient(135deg, #24c6dc, #514a9d);
 }
 form .button input:hover{
  /* transform: scale(0.99); */
  background:  linear-gradient(-135deg, #24c6dc, #514a9d);
  }
form .user-details .input-box{
    margin-bottom: 15px;
    width: 100%;
  }
  form .category{
    width: 100%;
  }
  .content form .user-details{
    max-height: 448px;
    overflow-y: scroll;
  }
  .user-details::-webkit-scrollbar{
    width: 5px;
  }

        .field-validation-error{
            color: red;
            font-size: 15px;
            margin-left: 40px;
        }

        input[type="checkbox"]:checked {
            background-color: #3399ff;
        }

        ::placeholder {
            font-size: 14px; 
        }
/* #success-message {
  background-color: green;
  color: white;
  padding: 10px;
  text-align: center;
  display: none;
} */
     </style>
   </head>
<body>
  <div class="container" style="box-shadow: 1px 1px 10px #fff;">
    <div class="title">Đăng ký</div>
        <div class="content">
            @using (Html.BeginForm("Register", "Login", FormMethod.Post))
            {
                <div class="user-details">
                    <div class="input-box">
                        <div class="username-container" style="display: flex; justify-content: center;">
                            @*  <span class="details">Tài khoản</span> *@
                            @Html.TextBoxFor(x => x.Username, new { @type = "text", placeholder = "Tài khoản", name = "customer_username", required = "required" })
                        </div>
                        @Html.ValidationMessageFor(x => x.Username)
                    </div>
                    <div class="input-box">
                        <div style="display: flex; justify-content: center;">
                            @*                             <span class="details">Mật khẩu</span> *@
                            @Html.TextBoxFor(x => x.Password, new { @type = "password", placeholder = "Mật khẩu", name = "customer_password", required = "required" })
                        </div>
                        @Html.ValidationMessageFor(x => x.Password)
                    </div>
                    <div class="input-box">
                        <div style="display: flex; justify-content: center;">
                            @* <span class="details">Nhập lại mật khẩu</span> *@
                            @Html.TextBoxFor(x => x.RePassword, new { @type = "password", placeholder = "Xác nhận mật khẩu", name = "customer_re_pass", required = "required" })
                        </div>

                        @Html.ValidationMessageFor(x => x.RePassword)
                    </div>

                    <div class="input-box">
                        <div style="display: flex;justify-content: center;">
                            @*  <span class="details">Nhập họ và tên</span> *@
                            @Html.TextBoxFor(x => x.CustomerName, new { @type = "text", placeholder = "Họ và tên", name = "customer_name", required = "required" })
                        </div>

                        @Html.ValidationMessageFor(x => x.CustomerName)
                    </div>
                    <div class="input-box">
                        <div style="display: flex;justify-content: center;">
                            @*  <span class="details">Email</span> *@
                            @Html.TextBoxFor(x => x.CustomerEmail, new { @type = "text", placeholder = "Email", name = "customer_email", required = "required" })
                        </div>

                        @Html.ValidationMessageFor(x => x.CustomerEmail)
                    </div>
                    <div class="input-box">
                        <div style="display: flex;justify-content: center;">
                            @*  <span class="details">Số điện thoại</span> *@
                            @Html.TextBoxFor(x => x.Phone, new { @type = "text", placeholder = "Số điện thoại", name = "customer_phone", required = "required" })
                        </div>

                        @Html.ValidationMessageFor(x => x.Phone)
                    </div>
                    <div class="input-box">
                        <div style="display: flex;justify-content: center;">
                            <input type="checkbox" id="myCheckbox" name="myCheckbox" style="width: 8%; margin-left: 16px; height: 15px;">
                            <label for="myCheckbox" style="font-size: 13px;">Tôi đồng ý với <span style="color: #3399ff">Điều khoản sử dụng</span> và <span style="color: #3399ff">Chính sách bảo mật</span></label>
                        </div>
                    </div>
                </div>
                <div class="button" style="display: flex; justify-content: center;">
                    <input class="register_customer" type="submit" name="dangky" value="Đăng ký" style="width: 80%;">
                </div>

            }
            @if (TempData["RegisterSuccess"] != null)
            {
                <div class="register-success">
                    @TempData["RegisterSuccess"]
                </div>
            }
        </div>
  </div>
    <script>
        document.getElementById('myCheckbox').addEventListener('change', function () {
            if (this.checked) {
                this.style.backgroundColor = '#3399ff';
            } else {
                this.style.backgroundColor = 'initial';
            }
        });
    </script>
</body>
</html>